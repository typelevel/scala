logImplicits.scala:2: applied implicit conversion from xs.type to ?{def size: ?} = implicit def byteArrayOps(xs: Array[Byte]): scala.collection.mutable.ArrayOps[Byte]
  def f(xs: Array[Byte]) = xs.size
                           ^
logImplicits.scala:7: applied implicit conversion from "abc".type to ?{def map: ?} = implicit def augmentString(x: String): scala.collection.immutable.StringOps
  def f = "abc" map (_ + 1)
          ^
logImplicits.scala:15: inferred view from "abc".type to Int = C.this.convert:(p: "abc".type)Int
  math.max(122, x: Int)
                ^
logImplicits.scala:19: applied implicit conversion from 1.type to ?{def ->: ?} = implicit def ArrowAssoc[A](self: A): ArrowAssoc[A]
  def f = (1 -> 2) + "c"
           ^
logImplicits.scala:19: applied implicit conversion from (Int, Int) to ?{def +: ?} = implicit def any2stringadd[A](self: A): any2stringadd[A]
  def f = (1 -> 2) + "c"
             ^
logImplicits.scala:22: error: class Un needs to be abstract, since method unimplemented is not defined
class Un {
      ^
one error found
